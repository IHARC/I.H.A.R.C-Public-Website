// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/about" | "/command-center" | "/command-center/admin" | "/ideas" | "/ideas/[id]" | "/ideas/[id]/complete" | "/ideas/submit" | "/login" | "/plans" | "/plans/[slug]" | "/progress" | "/register" | "/solutions" | "/solutions/[id]" | "/solutions/mod" | "/solutions/profile" | "/solutions/submit" | "/stats"
type AppRouteHandlerRoutes = "/api/portal/flags" | "/api/portal/ideas" | "/api/portal/ideas/[id]" | "/api/portal/ideas/[id]/assign" | "/api/portal/ideas/[id]/comments" | "/api/portal/ideas/[id]/decision" | "/api/portal/ideas/[id]/request-revision" | "/api/portal/ideas/[id]/vote" | "/api/portal/metrics" | "/api/portal/moderate" | "/api/portal/notifications/[id]/ack" | "/api/portal/plans/[planId]/updates" | "/api/portal/plans/promote" | "/api/portal/plans/updates/[updateId]/status" | "/api/portal/plans/updates/[updateId]/vote" | "/api/portal/profile/ack" | "/api/portal/profile/confirm-display" | "/api/portal/telemetry"
type PageRoutes = never
type LayoutRoutes = "/"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/about": {}
  "/api/portal/flags": {}
  "/api/portal/ideas": {}
  "/api/portal/ideas/[id]": { "id": string; }
  "/api/portal/ideas/[id]/assign": { "id": string; }
  "/api/portal/ideas/[id]/comments": { "id": string; }
  "/api/portal/ideas/[id]/decision": { "id": string; }
  "/api/portal/ideas/[id]/request-revision": { "id": string; }
  "/api/portal/ideas/[id]/vote": { "id": string; }
  "/api/portal/metrics": {}
  "/api/portal/moderate": {}
  "/api/portal/notifications/[id]/ack": { "id": string; }
  "/api/portal/plans/[planId]/updates": { "planId": string; }
  "/api/portal/plans/promote": {}
  "/api/portal/plans/updates/[updateId]/status": { "updateId": string; }
  "/api/portal/plans/updates/[updateId]/vote": { "updateId": string; }
  "/api/portal/profile/ack": {}
  "/api/portal/profile/confirm-display": {}
  "/api/portal/telemetry": {}
  "/command-center": {}
  "/command-center/admin": {}
  "/ideas": {}
  "/ideas/[id]": { "id": string; }
  "/ideas/[id]/complete": { "id": string; }
  "/ideas/submit": {}
  "/login": {}
  "/plans": {}
  "/plans/[slug]": { "slug": string; }
  "/progress": {}
  "/register": {}
  "/solutions": {}
  "/solutions/[id]": { "id": string; }
  "/solutions/mod": {}
  "/solutions/profile": {}
  "/solutions/submit": {}
  "/stats": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
