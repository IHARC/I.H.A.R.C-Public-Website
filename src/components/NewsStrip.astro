---
import { getCollection } from 'astro:content';
import { contentFlags } from '../data/site';

// Get the latest 4 news posts
const allNews = await getCollection('news', ({ data }) => !data.draft);
const latestNews = allNews
  .sort((a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime())
  .slice(0, 4);

// Check if news is stale (older than 180 days)
const isNewsStale = () => {
  if (latestNews.length === 0) return true;
  const latestPostDate = new Date(latestNews[0].data.date);
  const daysSinceLatest = Math.floor((Date.now() - latestPostDate.getTime()) / (1000 * 60 * 60 * 24));
  return daysSinceLatest > 180;
};

// Determine if we should show the news section
const shouldShowNews = contentFlags.showNews && !isNewsStale();

// Format date helper
const formatDate = (date: Date) => {
  return new Intl.DateTimeFormat('en-CA', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  }).format(date);
};
---

{shouldShowNews && (
<section class="py-16 bg-surface-container-low">
  <div class="container">
    <div class="text-center mb-12">
      <h2 class="text-3xl lg:text-4xl font-heading font-bold text-on-surface mb-4">
        News & Updates
      </h2>
      <p class="text-lg text-on-surface-variant max-w-2xl mx-auto">
        Stay informed about our programs, community impact, and latest initiatives.
      </p>
    </div>

    <div class="relative">
      <!-- News Cards Container -->
      <div id="news-carousel" class="overflow-hidden">
        <div class="flex transition-transform duration-500 ease-out" id="news-track">
          {latestNews.map((post) => (
            <div class="flex-none w-full md:w-1/2 lg:w-1/3 px-3">
              <article class="card h-full group hover:shadow-lg transition-all duration-250">
                <div class="flex flex-col h-full">
                  <header class="mb-4">
                    <time
                      datetime={post.data.date.toISOString()}
                      class="text-sm text-primary font-medium"
                    >
                      {formatDate(post.data.date)}
                    </time>
                    <h3 class="text-xl font-heading font-semibold text-on-surface mt-2 group-hover:text-primary transition-colors">
                      <a href={`/news/${post.slug}`} class="focus:outline-none focus:ring-2 focus:ring-primary focus:ring-offset-2 rounded">
                        {post.data.title}
                      </a>
                    </h3>
                  </header>

                  <div class="flex-1">
                    <p class="text-gray-600 leading-relaxed mb-4">
                      {post.data.excerpt}
                    </p>

                    {post.data.tags && (
                      <div class="flex flex-wrap gap-2 mb-4">
                        {post.data.tags.slice(0, 3).map((tag: string) => (
                          <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-primary/10 text-primary">
                            {tag}
                          </span>
                        ))}
                      </div>
                    )}
                  </div>

                  <footer class="mt-auto">
                    <a
                      href={`/news/${post.slug}`}
                      class="inline-flex items-center text-primary hover:text-primary-dark font-medium transition-colors group-hover:translate-x-1 transform duration-250"
                    >
                      Read more
                      <svg class="ml-2 w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                      </svg>
                    </a>
                  </footer>
                </div>
              </article>
            </div>
          ))}
        </div>
      </div>

      <!-- Navigation Controls -->
      {latestNews.length > 3 && (
        <div class="flex justify-center items-center space-x-4 mt-8">
          <button
            id="news-prev"
            class="p-3 rounded-full bg-surface border-2 border-primary text-primary hover:bg-primary hover:text-on-primary transition-all duration-250 focus:outline-none focus:ring-2 focus:ring-primary focus:ring-offset-2"
            aria-label="Previous news posts"
          >
            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
            </svg>
          </button>

          <div class="flex space-x-2" id="news-indicators">
            {Array.from({ length: Math.ceil(latestNews.length / 3) }).map((_, index) => (
              <button
                class={`w-3 h-3 rounded-full transition-all duration-250 ${
                  index === 0 ? 'bg-primary' : 'bg-neutral-gray'
                }`}
                aria-label={`Go to page ${index + 1}`}
                data-slide={index}
              ></button>
            ))}
          </div>

          <button
            id="news-next"
            class="p-3 rounded-full bg-surface border-2 border-primary text-primary hover:bg-primary hover:text-on-primary transition-all duration-250 focus:outline-none focus:ring-2 focus:ring-primary focus:ring-offset-2"
            aria-label="Next news posts"
          >
            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
            </svg>
          </button>
        </div>
      )}
    </div>

    <!-- View All CTA -->
    <div class="text-center mt-12">
      <a href="/news" class="btn-primary">
        View All News
      </a>
    </div>
  </div>
</section>
)}

{shouldShowNews && (
<script>
  class NewsCarousel {
    private track: HTMLElement;
    private prevBtn: HTMLElement | null;
    private nextBtn: HTMLElement | null;
    private indicators: NodeListOf<HTMLElement>;
    private currentSlide = 0;
    private autoPlayInterval: number | null = null;
    private maxSlides: number;

    constructor() {
      this.track = document.getElementById('news-track')!;
      this.prevBtn = document.getElementById('news-prev');
      this.nextBtn = document.getElementById('news-next');
      this.indicators = document.querySelectorAll('#news-indicators button');
      this.maxSlides = this.indicators.length;

      if (this.track && this.maxSlides > 1) {
        this.init();
      }
    }

    private init() {
      // Event listeners
      this.prevBtn?.addEventListener('click', () => this.previousSlide());
      this.nextBtn?.addEventListener('click', () => this.nextSlide());
      
      this.indicators.forEach((indicator, index) => {
        indicator.addEventListener('click', () => this.goToSlide(index));
      });

      // Auto-play functionality
      this.startAutoPlay();
      
      // Pause on hover
      const carousel = document.getElementById('news-carousel');
      carousel?.addEventListener('mouseenter', () => this.stopAutoPlay());
      carousel?.addEventListener('mouseleave', () => this.startAutoPlay());

      // Accessibility - pause on focus
      const focusableElements = this.track.querySelectorAll('a, button');
      focusableElements.forEach(el => {
        el.addEventListener('focus', () => this.stopAutoPlay());
        el.addEventListener('blur', () => this.startAutoPlay());
      });
    }

    private goToSlide(slideIndex: number) {
      this.currentSlide = slideIndex;
      const translateX = -(slideIndex * 100);
      this.track.style.transform = `translateX(${translateX}%)`;
      this.updateIndicators();
    }

    private nextSlide() {
      this.currentSlide = (this.currentSlide + 1) % this.maxSlides;
      this.goToSlide(this.currentSlide);
    }

    private previousSlide() {
      this.currentSlide = (this.currentSlide - 1 + this.maxSlides) % this.maxSlides;
      this.goToSlide(this.currentSlide);
    }

    private updateIndicators() {
      this.indicators.forEach((indicator, index) => {
        indicator.classList.toggle('bg-primary', index === this.currentSlide);
        indicator.classList.toggle('bg-neutral-gray', index !== this.currentSlide);
      });
    }

    private startAutoPlay() {
      this.autoPlayInterval = window.setInterval(() => {
        this.nextSlide();
      }, 6000); // 6 seconds
    }

    private stopAutoPlay() {
      if (this.autoPlayInterval) {
        clearInterval(this.autoPlayInterval);
        this.autoPlayInterval = null;
      }
    }
  }

  // Initialize carousel when DOM is ready
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', () => new NewsCarousel());
  } else {
    new NewsCarousel();
  }
</script>
)}